---

#Checking the Software Requirements

- name: install dev tools
  yum: name="@Development tools" state=present
  when:
    install_yum_packages
- name: install x86 package dependencies on linux 6
  yum: name={{ item }} state=present
  with_items:
    - binutils
    - compat-libcap1
    - compat-libstdc++*x86_64
    - compat-libstdc++*i686
    - gcc
    - gcc-c++
    - glibc-*x86_64
    - glibc-*i686
    - glibc-devel*x86_64
    - glibc-devel*i686
    - ksh
    - libgcc-*i686
    - libgcc-*x86_64
    - libstdc++-*x86_64
    - libstdc++-*i686
    - libstdc++-devel-*x86_64
    - libstdc++-devel-*i686
    - libaio-*x86_64
    - libaio-*i686
    - libaio-devel*x86_64
    - libaio-devel*i686
    - make
    - sysstat
    - unixODBC-*x86_64
    - unixODBC-*i686
    - unixODBC-devel*x86_64
    - unixODBC-devel*i686
  when:
    install_yum_packages

# Creating Required Directories
- name: create the oracle installation path
  file:
    mode: 0755
    path: "{{ oracle_base }}"
    state: directory
    group: "{{ oracle_group }}"
    owner: "{{ oracle_user }}"

# Configuring the oracle User's Environment
- name: Configuring the oracle User's Environment
  lineinfile: dest=/home/{{ oracle_user }}/.bashrc state=present line="{{ item }}"
  with_items:
    - "export TMP=/tmp"
    - "export TMPDIR=$TMP"
    - "export ORACLE_UNQNAME={{ oracle_db_sid }}"
    - "export ORACLE_SID={{ oracle_db_sid }}"
    - "export ORACLE_BASE={{ oracle_base }}"
    - "export ORACLE_HOME={{ oracle_home }}"
    - "export PATH=$ORACLE_HOME/bin:/usr/sbin:$PATH"
    - "export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib"
    - "export CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib"

#
# Install Oracle DB 11gR2 in silent mode
#
- name: check if oracle has already been installed
  stat: path=/etc/oratab
  register: oracle_installed

- name: compose the oracle automated installer settings
  template:
    src: db11gR2.rsp.j2
    dest: "/tmp/db_install.rsp"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
  when: not oracle_installed.stat.exists

- name: install oracle
  sudo_user: "{{ oracle_user }}"
  command: "{{ db11gr2_unzip_path }}/database/runInstaller -silent -force -ignoreSysPrereqs -waitforcompletion -responseFile /tmp/db_install.rsp"
  when: not oracle_installed.stat.exists
  ignore_errors: yes

- name: general oracle post-installation
  command: "{{ oracle_inventory }}/orainstRoot.sh"
  when: not oracle_installed.stat.exists

- name: db-specific oracle post-installation
  command: "{{ oracle_home }}/root.sh"
  when: not oracle_installed.stat.exists

#
# Create Database Startup and Shutdown on Linux
#
- name: create the script path
  file:
    mode: 0755
    path: "/home/{{ oracle_user }}/scripts"
    state: directory
    group: "{{ oracle_group }}"
    owner: "{{ oracle_user }}"

# http://docs.oracle.com/cd/E18676_01/doc/server.112/e10839/strt_stp.htm
- name: create a database startup and shutdown script
  template:
    mode: "750"
    src: dbora.j2
    dest: "/home/{{ oracle_user }}/scripts/dbora.sh"
    group: "{{ oracle_group }}"
    owner: "{{ oracle_user }}"
